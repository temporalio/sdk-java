// v0.20.0-2-g000a42a -> 0.20.0-2-g000a42a
ext.getTag = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim().substring(1)
}

// 0.20.1-g000a42a -> 0.21.0-SNAPSHOT
// 0.20.0-RC1-1-g000a42a -> 0.20.0-RC2-1-SNAPSHOT
// 0.20.1-some-postfix-2-g000a42a -> 0.21.0-some-postfix-SNAPSHOT
// 0.20.0 -> 0.20.0
// Used to name jar files
ext.getVersionName = { ->
    String tag = getTag()

    // The last element of describe should start with g according to git describe format
    // if we are not exactly on a tag. If it doesn't - we are on a tag
    def (_, major, minor, patch, rc, extra, git) = (tag =~ /^(\d+)[.](\d+)[.](\d+)(?:-RC(\d+))?(-.*?)?(-g[0-9a-f]+)?$/)[0];

    if (git) {
        if (rc) {
            return "${major}.${minor}.${patch}-RC${(rc as int) + 1}${extra}-SNAPSHOT";
        } else {
            return "${major}.${(minor as int) + 1}.0${extra}-SNAPSHOT";
        }

    } else {
        return tag
    }
}

// 0.20.0-SNAPSHOT -> 0.20.0
// 0.20.0 -> 0.20.0
// Stored int version.properties which is loaded
// and used as a value of temporal-client-version gRPC header.
ext.getClientVersionName = { ->
    def split = getVersionName().split('-')
    return split[0]
}

group = 'io.temporal'
version = getVersionName()

subprojects {
    apply plugin: "com.palantir.git-version"

    group = 'io.temporal'
    version = getVersionName()
}