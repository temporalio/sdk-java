description = '''Temporal Workflow Java SDK'''

dependencies {
    implementation(platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion"))

    api project(':temporal-serviceclient')
    api "com.google.code.gson:gson:$gsonVersion"
    api "io.micrometer:micrometer-core:$micrometerVersion"

    implementation ("com.google.guava:guava:$guavaVersion") {
        exclude group: 'com.google.code.findbugs'
        exclude group: 'com.google.errorprone'
        exclude group: 'com.google.j2objc'
    }
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    if (!JavaVersion.current().isJava8()) {
        implementation 'javax.annotation:javax.annotation-api:1.3.2'
    }
    // compileOnly and testImplementation because this dependency is needed only to work with json format of history
    // which shouldn't be needed for any production usage of temporal-sdk.
    // It's useful only for unit tests and debugging.
    // For these use-cases Temporal users can add this dep in the classpath temporary or permanently themselves.
    compileOnly "com.jayway.jsonpath:json-path:$jsonPathVersion"
    testImplementation "com.jayway.jsonpath:json-path:$jsonPathVersion"

    testImplementation project(':temporal-testing-junit4')
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
}

task registerNamespace(type: JavaExec) {
    main = 'io.temporal.internal.docker.RegisterTestNamespace'
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn 'registerNamespace'
