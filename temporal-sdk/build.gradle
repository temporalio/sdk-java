description = '''Temporal Workflow Java SDK'''

dependencies {
    api project(':temporal-serviceclient')
    api group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    api group: 'io.micrometer', name: 'micrometer-core', version: '1.7.3'

    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.cronutils', name: 'cron-utils', version: '9.1.5'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.4'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.4'
    if (!JavaVersion.current().isJava8()) {
        implementation 'javax.annotation:javax.annotation-api:1.3.2'
    }
    testImplementation project(':temporal-testing-junit4')
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.5'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'
}

task registerNamespace(type: JavaExec) {
    main = 'io.temporal.RegisterTestNamespace'
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn 'registerNamespace'
