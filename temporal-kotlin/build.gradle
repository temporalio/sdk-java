buildscript {
    ext {
        kotlinVersion = "${JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_16) ? '1.5.32' : '1.4.32'}"
    }
}

plugins {
//    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
//    id 'org.jetbrains.kotlin.jvm' version '1.5.32'
//    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
    id 'org.jlleitschuh.gradle.ktlint' version '10.2.1'
}

apply plugin: 'org.jetbrains.kotlin.jvm'

description = '''Temporal Workflow Java SDK Kotlin'''

compileKotlin {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation(platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion"))

    api project(':temporal-sdk')

    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation ("com.fasterxml.jackson.module:jackson-module-kotlin") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }

    testImplementation project(':temporal-testing')
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'

    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
}

task registerNamespace(type: JavaExec) {
    main = 'io.temporal.internal.docker.RegisterTestNamespace'
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn 'registerNamespace'
