import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.gradle.api.plugins.jvm.JvmTestSuite

plugins {
    id 'org.jlleitschuh.gradle.ktlint' version '11.3.1'
}

apply plugin: 'org.jetbrains.kotlin.jvm'

description = '''Temporal Workflow Java SDK Kotlin'''

tasks.withType(KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        jvmTarget = project.hasProperty("edgeDepsTest") ? JavaVersion.VERSION_21 : JavaVersion.VERSION_1_8
        languageVersion = "${project.hasProperty("edgeDepsTest") ? '1.8' : (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_16) ? '1.5' : '1.4')}"
    }
}

dependencies {
    implementation(platform("com.fasterxml.jackson:jackson-bom:$jacksonVersion"))

    // this module shouldn't carry temporal-sdk with it, especially for situations when users may be using a shaded artifact
    compileOnly project(':temporal-sdk')

    implementation "org.jetbrains.kotlin:kotlin-reflect"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation ("com.fasterxml.jackson.module:jackson-module-kotlin") {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }

    testImplementation project(':temporal-testing')
    testImplementation "junit:junit:${junitVersion}"

    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
}

task registerNamespace(type: JavaExec) {
    getMainClass().set('io.temporal.internal.docker.RegisterTestNamespace')
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn 'registerNamespace'

def jacksonVersions = ['2.9.0', "$jacksonVersion".toString()]

testing {
    suites {
        jacksonVersions.forEach { jacksonVersion ->
            "jackson${jacksonVersion}Test"(JvmTestSuite) {
                useJUnit(junitVersion)
                dependencies {
                    implementation project()
                    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion!!"
                    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion!!"
                    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion!!") {
                        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
                    }

                    implementation project(':temporal-testing')
                    implementation "junit:junit:${junitVersion}"
                }
            }
        }
    }
}

test.dependsOn("jackson2.9.0Test", "jackson2.14.2Test")
