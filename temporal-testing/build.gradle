plugins {
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.10.4'
}

description = '''Temporal Workflow Java SDK testing'''

java {
    registerFeature('junit4') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('junit5') {
        usingSourceSet(sourceSets.main)
    }
}

dependencies {
    api project(':temporal-sdk')
    api project(':temporal-test-server')

    // This dependency is included in temporal-sdk module as optional with compileOnly scope.
    // To make things easier for users, it's helpful for the testing module to bring this dependency
    // transitively as most users work with history jsons in tests.
    implementation("com.jayway.jsonpath:json-path:$jsonPathVersion"){
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    junit4Api 'junit:junit:4.13.2'

    junit5Api platform('org.junit:junit-bom:5.9.2')
    junit5Api 'org.junit.jupiter:junit-jupiter-api'

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter'
    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
}

graalvmNative {
    // Dependency resolution is looking for a library compatible with JVM runtime version 8,
    // but 'org.graalvm.buildtools:junit-platform-native:0.10.4' is only compatible with JVM runtime version 11 or newer.
    testSupport = false

    agent {
        metadataCopy {
            outputDirectories.add("temporal-test-server/src/main/resources/META-INF/native-image/io.temporal/temporal-test-server")
        }
    }
}

test {
    useJUnitPlatform()
}